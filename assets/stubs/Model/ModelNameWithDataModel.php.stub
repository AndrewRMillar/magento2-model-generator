<?php 

declare(strict_types=1);

namespace {{ VendorName }}\{{ ModuleName }}\Model;

use Magento\Framework\Api\DataObjectHelper;
use Magento\Framework\Data\Collection\AbstractDb;
use Magento\Framework\Model\AbstractModel;
use Magento\Framework\Model\Context;
use Magento\Framework\Registry;
use {{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}Interface;
use {{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}InterfaceFactory;

class {{ ModelName }} extends AbstractModel
{
    public function __construct(
        Context $context,
        Registry $registry,
        private readonly DataObjectHelper $dataObjectHelper,
        private readonly  {{ ModelName }}InterfaceFactory ${{ VariableName }}DataFactory,
        ResourceModel\{{ ModelName }} $resource,
        AbstractDb $resourceCollection = null,
        array $data = []
    ) {
        parent::__construct($context, $registry, $resource, $resourceCollection, $data);
    }

    public function getDataModel(): {{ ModelName }}Interface
    {
        $data = $this->getData();

        $dataObject = $this->{{ VariableName }}DataFactory->create();
        $this->dataObjectHelper->populateWithArray(
            $dataObject,
            $data,
            {{ ModelName }}InterfaceFactory::class
        );

        return $dataObject;
    }
}
